{
  "version": 4,
  "terraform_version": "1.6.2",
  "serial": 17,
  "lineage": "ea41e79e-b9b4-ba04-43a4-bcd07c69be98",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "azurerm_kubernetes_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aci_connector_linux": [],
            "agent_pool_profile": [
              {
                "count": 2,
                "enable_auto_scaling": false,
                "enable_node_public_ip": false,
                "max_count": 0,
                "max_pods": 110,
                "min_count": 0,
                "name": "default",
                "node_labels": {},
                "node_public_ip_prefix_id": "",
                "node_taints": [],
                "orchestrator_version": "1.28.3",
                "os_disk_size_gb": 30,
                "os_type": "Linux",
                "tags": {},
                "type": "VirtualMachineScaleSets",
                "upgrade_settings": [
                  {
                    "max_surge": "10%"
                  }
                ],
                "vm_size": "Standard_D2_v2",
                "vnet_subnet_id": "",
                "zones": []
              }
            ],
            "api_server_authorized_ip_ranges": [],
            "azure_active_directory_role_based_access_control": [],
            "azure_policy_enabled": false,
            "disk_encryption_set_id": "",
            "dns_prefix": "smooth-reindeer-k8s",
            "fqdn": "smooth-reindeer-k8s-2difh2t4.hcp.swedencentral.azmk8s.io",
            "http_application_routing_enabled": false,
            "http_application_routing_zone_name": "",
            "id": "/subscriptions/fd41d8cf-828e-4cf2-bca0-72a3e1dc2374/resourceGroups/smooth-reindeer-rg/providers/Microsoft.ContainerService/managedClusters/smooth-reindeer-aks",
            "identity": [],
            "ingress_application_gateway": [],
            "key_vault_secrets_provider": [],
            "kube_admin_config": [],
            "kube_admin_config_raw": "",
            "kube_config": [
              {
                "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRZXp1YUgrU0JiUmRxWWFvcUJ6RWoyREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TXpFeE1qQXhNakk1TWpCYUZ3MHlOVEV4TWpBeE1qTTVNakJhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURPVW0yQVZYYnRHQnJtQWRGZ1ZyVXAKQW9VMmhaNmZDU1N1Q3VoT1pGcmhEcmdyZy9OUys1RzRRWS90MFZsSzZENU5JaFh3WGtwM01OSmhiVzBuRHFtMQpUYXNRRGhTeTV6elZoVWIxdWlpQ2FNMXR4VGk5bU4xaXBaT1RObDdJbS9wTW1nWHBvbEF4VFBqZDJVUk8rcklpCkFlVzFTMGQrQ0wyYy93VjR1TDI2UG1walVLUkRsSEo1L0IxS0VIN2tBWkx3aHZYYmY2Tm9WN1BlTzE1L2J0aFcKaTdEbFF2N3FOZ3d2NWJrQW9BWDQ0Z0Z5dmR2ejJnb3NabTlERGk0SHhGZDdpSzVobkhhbWxaUDdtUVk2VVpocgo2YmNXM01JNUc5dDRIV054dyswdDVCNGxaSXBySHR4RTg3ZzViU3NJd2hTUDExRTQxU3NtQWtaVTVwZU1sUlN4CjdEWTE5dmtDTURiNEVUQWNlak83TXRJOVlEdUs0c1lJWHlEMzhFNU9ubHlQYU9aOHFKZ1VjVGVMQ1JjampGUGQKNXZlNmdkV1l6Y3c5S3RFUlk1cnpIWlBucHIxcVE5bVNWRFpzQ2ljUm9Ud2RqWHVIZFQxVFlXUWx0Y2NpaFl5OAphSXVYUWtTYjZuYU9mcXFIZTlkbmVhZjhIN2VWWDdudHEyTXphZW52U3ZIbDhCMXl2UFdHT1lkcmRTT2kzbkc0CmF2MUVTZDhuVng2SnR0cW5ZUTJLcWk3MlBEWDBwYkw1LzJHV1VzRU1CSTRuc1lpOE43MVJtZUorNGNuWEN2QWsKTUhKTDBPdnR1SHhGaGZtUCtRZ0hrQ2tJZzN3QXRpbjZFbmhYWnZud2tKeGRCcWViWEI4dUdkMUREdkZiK0w0SgpBNy83aG10d2RFT2U5RSt4M05ja3dRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFURUZJWjB6RFcKclA1MGNFNFdTVmd0TmZYOVlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFaRkx1MUlrZC9ndDFUSGx4d05BMwp5S2Z6c1lzNUhvRWYxenRQb25tSGFUL0FlL085SzI5RUtUZ3N1VzN2bmRNcis5a0kyVWd6Vk05YW9GUFQzdEhYCkRoeGl2NkVKMU9iU05YMWZkUVczYnJ0NDdwY2hZVktMcEdlQXBmTFhyRTF3d0Fteld2a2hvWk9qL3VxakcyREMKM21DYTRnN0tjeFhrc0F5eDk5U2pMejg0Uk41cTFwbWtrSk1LRTNKMHpuVTNsbWpxNTl2Zk9tb2xySG5IL1RVdwpOYUQzT1VLZjhhN1drekpvQk1LWlBWUC9xdTM2bWxNeHlSZVIrbTFSOTN5UlRPdXUydDY1VmZ5VytBUlo0dEVQCmhma3V3aCtHYm9JbGJxQXVVN25jdUJJZHRFTEE3NGhLMW9UQjFxZkRLUG13N0FJN3ZjT0F1R2hRdVJISjE5djMKdlRMTG5XMUtPN3ZMTG1DUVZmdmdjbmNzQWRqRGdNUTFqZytOUDNKSmNvV3M4WVJTVFhOY0tha3JPY29senJMeAppcUJ1dWZ2ckFnVk9GUTF4a0FBVkQ3dmkxWjNlRzl5KzVPUEFQSXhNU3FjK25DY05rUC9wTTA0czBpdDJkYXJ1CitORFN3TXVCMVhPaExuWjVSYmdFcktPeHovZGNRVVhkdGpBcGxHMnErOVhwdXZxQkpaTUpsRUpZeW1VMExGZDcKWnM2U2x0c0lhRkZDK0pScHM0c0RxdEhXemowRXY5UmFtS3NseEliUWtTYWdqWlFxSzJLaEt4Y1hIbHRxSzdhWQp0RjJsVlNObENnU0ZVZHlHamtMYndybytuWFIrbHZKYTBQMU13T0x1RVNHK29FckFTTk1ZaWd6ejNVcyt0NnNCCk0wVlF1eC9ZWFVvNmtUQ0FxZ3NlUXVnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBemxKdGdGVjI3UmdhNWdIUllGYTFLUUtGTm9XZW53a2tyZ3JvVG1SYTRRNjRLNFB6ClV2dVJ1RUdQN2RGWlN1ZytUU0lWOEY1S2R6RFNZVzF0Snc2cHRVMnJFQTRVc3VjODFZVkc5Ym9vZ21qTmJjVTQKdlpqZFlxV1RrelpleUp2NlRKb0Y2YUpRTVV6NDNkbEVUdnF5SWdIbHRVdEhmZ2k5blA4RmVMaTl1ajVxWTFDawpRNVJ5ZWZ3ZFNoQis1QUdTOEliMTIzK2phRmV6M2p0ZWYyN1lWb3V3NVVMKzZqWU1MK1c1QUtBRitPSUJjcjNiCjg5b0tMR1p2UXc0dUI4UlhlNGl1WVp4MnBwV1QrNWtHT2xHWWErbTNGdHpDT1J2YmVCMWpjY1B0TGVRZUpXU0sKYXg3Y1JQTzRPVzByQ01JVWo5ZFJPTlVySmdKR1ZPYVhqSlVVc2V3Mk5mYjVBakEyK0JFd0hIb3p1ekxTUFdBNwppdUxHQ0Y4ZzkvQk9UcDVjajJqbWZLaVlGSEUzaXdrWEk0eFQzZWIzdW9IVm1NM01QU3JSRVdPYTh4MlQ1NmE5CmFrUFprbFEyYkFvbkVhRThIWTE3aDNVOVUyRmtKYlhISW9XTXZHaUxsMEpFbStwMmpuNnFoM3ZYWjNtbi9CKzMKbFYrNTdhdGpNMm5wNzByeDVmQWRjcnoxaGptSGEzVWpvdDV4dUdyOVJFbmZKMWNlaWJiYXAyRU5pcW91OWp3MQo5S1d5K2Y5aGxsTEJEQVNPSjdHSXZEZTlVWm5pZnVISjF3cndKREJ5UzlEcjdiaDhSWVg1ai9rSUI1QXBDSU44CkFMWXAraEo0VjJiNThKQ2NYUWFubTF3ZkxobmRRdzd4Vy9pK0NRTy8rNFpyY0hSRG52UlBzZHpYSk1FQ0F3RUEKQVFLQ0FnQlVhWHJ0ZjRucGxPd2tZR2dHVDFOTkZQL2xmNk9YRTRtVFAxa3VBWGNCRHlHZ2hCckFQN2F0dVAwbQo0bmp5NGJQam9PZHk4VkRzRk9odC9mUWpmNmRGU3lLS3JnZ2Y3ZVdBd2tkMjc1UDFUdVdGWEtSTFJjaUZ2SkoxCkwxQjJLUUt0NW5JMjFUYVVCUmJveFNSaVg4VVRqczBwY0VRdXQyckVXYjRtVndjZ3RMcVlLWDBiUFJmYytwNE4KR0ZTaCtsYmcyNGFwS0Q1MXlUUUkzeWRaWWNOWEhVM2hicGlXd0VnYUxKV1ZRT05Rb1Q3UWNBY1diSVd2QnJYTQpySGQrckFEU3hPZjdmYVU1b0licjcvNlJTNkxkdThBeHRWNHRPVTJBaGgyU2hRTjd2Qkh0WUlZVkw0b1ZGOVd1CmdSQ1RRN3hmNFVzVXdub2wwZFp1ayswN0VoOWxzeC9PdmsrMGYvOEl2dnZScVlkQ2s3L0ErRkhOOWtZNGNUTncKQ1YwWW1tMzZTY2pYOUJkS1k5WFE3YlpWdi9tODBjMHB1ckFFcUZJMENLVVpRMk9KdVd2ZkowbUdhbFFQYno1MQpZQk1sWDRJeWppZTFrQ3ZLTWdsZmpWeStKNVRCejFEbEphOTA2SlZ5TjFxYU92ZzMvTm1aNGZxeUpaL3grNnh0CkMybzBES0M0TGZFUU1tRzlqaWw4c3A3S0lmZDRNa1Vnajg0SnJDT3E4b1RBL3p6UXovYWpsNnBRTGZUVHppV3oKTVNOUnpkWXVGdTdTT2xKcnpRZytYNUVTUnlpc25OTjRtallUbXY1QUdLcHQrUWp5a3VyTDVPd0wyNlZrSnpEeApjZFRrb3hhUGNoK0gyWU5KU1ZIZFJmTjJEdUNkS2p4VkhVMFdhVktsRXZBcWoxdzV0UUtDQVFFQTBsRloreGRUCnltUTNDcm5HNXNYRm5VeWJab0N6ck54UWhyVXZxZm1idGxtb3VoM0lKVmRBL1hzelhRQUFnck1MR2lzNnhSVGoKTVlFL0w2OEJWYkN0Qm16YTF2YzZ4OHRrbEdlWWRhUEtpYzVabXhCSzhsMnlmdU5URmd0Q0ZZbmdXV3Z4WHFWZwppczBuQ2Zid3I4SkhhVDUwSUY1WDZFL3dBVkRWNEpLNjA1SkRCeW9EWTNXRE55YmhSYzhuZkd3Z1pCNXhkem9MCmNIK0RRWDFYejhCZmtWWEF5cmpEUGV1TTI0SmNvY0tpMTNhdXBmZ2gveGdJN3dKQWllVUZudXRWcEVaNVZ2bysKYUNFZWtEUmFiMUNnME9NUCtkaXZtbjMvU1VIZHBoTmJ2cS93MXc3OGtwNkIzUWRtVkUyalRJNHU5eUo2cFRRSQpvQmxQR0xmbmI1MmhOd0tDQVFFQSt5TGtNWmVWaFFBcU5naFc5UHpiZXhkUUUwOWV2MmdFUURsSVl1eTNWMFlLCjVpc2RaTkFvM1NFNWlQRndRWFU5bGJnR0dpdEI1bHJsSVVpMldaVHlIQzJ1SGU4WEhHY2xSS0F1TmVHcFBCT2IKVS91OStsbFVEQnN6c205UnJicE51UDlhZzhseUhvaTc3MXlDWVFMb3FKL0dGSHRCekVxWHNLTDNjZ2hXVjhOLwpJMmlhRkpoMnVpc0x2ckUxNzVqNmpSUDZCcVVpRVNJcEtZZmNEUmoyS0Y1YXVVd29jQWN3QWMwaElIN1RvOWhRCjdOQVhyT3QxSlR6WGh1YnBGQ2NRMmRTampZbnhPR2w3ZDNxbnd0Y3JnOTFVdEJGdWRkc3FjNTRaYVNlc0pSNlgKRmhxeWR0M2x4bmptcTMxeDV3cWdEdnpqNXNmZmlHS29lNCtRdzMxRnh3S0NBUUVBdGFKcVdtNVgvK2V5bllHNQo1RjJTLy9sRUVDOUFmUjQ4TVVwVElyR2VKOHFnN0RPQ1FiVnNQRDNsS3dFd2I2L2UrN2V2NXJyV1IwKysyUmlECng1UndxYWJqREZteG14RHVDVGk2czRaRUNlVjYvMjcvdXZidWk2VVpnV1V4cWxaTHVnNStBdVpDVFQxRjVOWXUKSVN4ZzdlUnc5KzlpYmhCelR6K1hwbjR4K1R4TXhPZ2t5d1dXejgrMUo4dnk1d0tlcXJpYjk0TGFsRXFiZWJpZApXSjlrS2Fqc2VtYzh2c0lxQVAxQnNMWGVXc1IxcW9KMElkR0pEWmxkVVhuSDgrcDhLUVp3RG96SnpyWWpwaGlBCnJiZnRXdGx1VjdFcVh2dEh1T1c0WFpCRVlKZWtJS2NodkNKR056UUh6UERNQWZhZFd2T2RCZ1c5R1Q4aVQwK3MKQVhvWjJ3S0NBUUE4UitURWJxRktPbjduVjFzZ0ZTM052d3ZPaHNlMFpCQlpKaWJVOEFNV0pNN3E3c0J3ZVhMRgptWHNJL3dNMkF5RlVOY2JwTXlidlZ6UVdxREIxRWthSE13UFBWWnVUaXNLc1ZWS2lSbGRyL3p6U2pPUE9HdkVNCnN0N1czdGVaUHRYM0tQd2VGQldiZExDL3hOSGEzV3JoUnZDeDYrQWdYR3RLeitOYmNOcmcyQ0ZGYTQ5SWtFdzMKWmF1OUN5WnFLNnRBZitJTkJFaElHbzRNMVBxaC9qTGYvNzRCS21HdWVsc3dvMzluSUdwR3N0N0I2VFUxb1pNTgo3Q3ZEeXR0NXBlTHFscHJubDR2YVFaK01UMW5EY0FpVzcyS3NrbDZVVlpZOENHQUxHS1craHpnMjZ4T1phcXdECjF2TnZpSDMxdWx3dkhNN0xqNEI5YVVrTjE2a2s4NFh6QW9JQkFRQzBhYzNsVnd0ZUxiYmdZSUl4YjZaMkJEdFAKUlorblcvUmhMSHROcWhvdEltNkh1a2NMWVZkdUZrT2VLV1BnRC96ZUZ2R0ZnUk50RmNRRmxzUDdsK0JYZmFhNApCaXBwcEFnL0E5YnVkaVNLNU5NMnhSaEtjdERLNnhWOFI3L3BzUWN1a25aV2l2M2drdlp0RmpERm9MVHZTSW5XCjBzdXhVTTN1ekE4cDlOY2syckVWZEFCNFZTUE9qVXMwTVVLcGt5K09rcUhzdDZIVzM0d2ZXSzd0OE03aUtBZ0IKQWh5UzJldFV0NXZUaFkrSit6QlZtTkdEOEMwNk1zVUpVWWpMSjNyajlwb1BBaFRJYWZxS1AwRGpCeEliR3QzYwpxRmQxekFURC9LQWIrUHppREkvc2VROHlqNzRKT3JuK2NPN0lZeXM2SEU4aEhTaDdva2JEMVJJc0lCTHUKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQUthNkpiWnR2cVVTdnhjZGNsNEhoeVV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpNeE1USXdNVEl5T1RJd1doZ1BNakExTXpFeE1qQXhNak01TWpCYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCjBFVVVGVVdOZ2hEbjJQWlRzditrVW5BdmhMRWZET0hYazNNcTFpYk5oNVJHRmZuR3RtYTBUbHJ0Z2I2N3NHS2wKeEEyZFhvcjhxU3paWHlUM3lpcTdBWnNOcUpUbmo4RGZLU1U5d2pFZXVyZC9TcFZTYjdOWGhRV2taMmV6cHp0dQpWZjZJVWlaazc3ZGhILzhlV1lGakQwUTVUZmVDWnNjeGFMNm5mdEdDN05yWkVjU0hFcFNNNEFPaUQ3MWtsZUYvCkRzclhWU1dlakZDTUhBakZqalBMNDFvdnRiRU51N3Exdmhtckl2K3dDUHkxZTBnZGgySzZtamZvMXNBay94cEoKNjdoYXpZOGJiSFZIVzBGWlh4bDFEdXU3bU5qdk9wb1kvT3VYWEZDa2pWVjNEY3IyNU5GL0tUK3JoNEwzckdaYgpwQW9ZZHFCMGpyOWxaNjJnQ0VDY252a2gvZnR4NjhsdXZsSDFmYWFuYkhNMU03YUJqbmczZ0RCbEZvVGc5MXhUCk9tVGdod2FRNnBrSWpKMXVlM0pDQ2ozNDJtSnR2bTJhMlJtVnJKOFJxWXBlRi8xaWxNRDNjUEFIWVhyMHRRRlUKQklleVdLTGI5UXhVUXIxK2VZNXlOVnFlUnUrazlrOG1SS2RrcGlmWVAyM3RNMkVaWit2d2I4eWJTbnJlZ2tTZgorbjZiVElhOEJ6azVRY2xWZGRSWDMxRVg0SjczNEl4bVlrUkdzNm11bHdzQU5HMHZQL2RvRU5vN0lVRDNRUmh3CktVWEJ0N3FCQlFJRFBlOHUvNTRWSHlEWnZUeW9xQTNLK3dDVUQ5ZWF5STN0a2JDODZ6S2F4ZzVKTTB2ZlB6U1UKL1dLaE9oWU9PTkNla3p6dEJLUEt2UEJjR0tTVTFKS3pqMFl4UXhiUVFmMENBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQk1RVWhuVE1OYXMvblJ3ClRoWkpXQzAxOWYxZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ2VEYlg2dllqSFkrRDh1RUROSmwrUmxzTmgKZ0hxK0Q2Rlp1TEhhMjhIRENRaHN6RWFhUUFQOERoMHhWcnQvODlBMmc0cVJUVkdxYTJMdzF2ck41VGVBQUVTVApNUnJFaTZ0WmNNcTJSS0h1eGlUT1BEY053L29wNGpBZHBsM1ZCZWxsNW1yRTdRY1l5M3c0SjFZcmRjS05hamFXCnVUOTdNbWlMcVpCc3lVRmJVVlRtb3ZTbTIrOGFHa0Y1YjVKME5qdnpDNWFOUHZ3RWZUdjM5VFEzZ1BCSU14eE8KSnhGNGd4YkMvdmthSHN5blNDK3lwcjUreUhXMjZaZldXMDJRMW5PakNOYnZXSldwd2hqcStwSnRWTEVXUExzMQpoZGNUSzJHZHYzMG1SVkVpWWJGY2N6bVoyRDg2VkFjaHBocElUNnQrQk5RYWRwN0Q3dnJzcWhwKzVGdzk0VkpRCk1jSUhJcXFyZXJiQTdtMTVyUkhXUUdWOHM0RjczbjdEU2pqWlpTV2R3c1JEYndHQVlza3FTNUROc3dNdldGcDAKUEpuNDZ0QmJEcTZMU2lidXc0L3cvYkJhdjNpeWRRZWxjL2lTM21IcUExb2ZtNlFsbW4yZEs1UXZMRm9yUVBNNQpybk1SSEREWk5PRTRCeitaVGUybkIrcXI2S0cwQVNSWDZEUCtFWTg4UjJWSVN4NVZ0aXlIVEVJaS9QSVdPTnp2CmtFZ3BNWUsxcGZxRjlSeWxSOXVJUGc5L0tEWVA4VWFOODBnaTZIZFhnWGhwMGU2YTBZS3ZudVpwSGdoU3UxWHAKR2dGOUhCNGE0N1RhUUV3aFpwM004WjRnTUFvVjJkU3NDWVFaVDJ1UVRCaFRoMjUwa2UxWmEwdWN0U3NNNzY1MQpyQ1hEYzdYZWlFVDJuZFRCUUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "host": "https://smooth-reindeer-k8s-2difh2t4.hcp.swedencentral.azmk8s.io:443",
                "password": "qjm0veuvxp9gf88wzvgyfrx052kdp5xmn7xk70zyt5x4cmfmffbzath1qvn9zwcoacfijbe9nekfafx5vvsac3flm7eyddrnvfcc2n8tuz4917t94nzv9h01qzte9fk5",
                "username": "clusterUser_smooth-reindeer-rg_smooth-reindeer-aks"
              }
            ],
            "kube_config_raw": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQUthNkpiWnR2cVVTdnhjZGNsNEhoeVV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpNeE1USXdNVEl5T1RJd1doZ1BNakExTXpFeE1qQXhNak01TWpCYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCjBFVVVGVVdOZ2hEbjJQWlRzditrVW5BdmhMRWZET0hYazNNcTFpYk5oNVJHRmZuR3RtYTBUbHJ0Z2I2N3NHS2wKeEEyZFhvcjhxU3paWHlUM3lpcTdBWnNOcUpUbmo4RGZLU1U5d2pFZXVyZC9TcFZTYjdOWGhRV2taMmV6cHp0dQpWZjZJVWlaazc3ZGhILzhlV1lGakQwUTVUZmVDWnNjeGFMNm5mdEdDN05yWkVjU0hFcFNNNEFPaUQ3MWtsZUYvCkRzclhWU1dlakZDTUhBakZqalBMNDFvdnRiRU51N3Exdmhtckl2K3dDUHkxZTBnZGgySzZtamZvMXNBay94cEoKNjdoYXpZOGJiSFZIVzBGWlh4bDFEdXU3bU5qdk9wb1kvT3VYWEZDa2pWVjNEY3IyNU5GL0tUK3JoNEwzckdaYgpwQW9ZZHFCMGpyOWxaNjJnQ0VDY252a2gvZnR4NjhsdXZsSDFmYWFuYkhNMU03YUJqbmczZ0RCbEZvVGc5MXhUCk9tVGdod2FRNnBrSWpKMXVlM0pDQ2ozNDJtSnR2bTJhMlJtVnJKOFJxWXBlRi8xaWxNRDNjUEFIWVhyMHRRRlUKQklleVdLTGI5UXhVUXIxK2VZNXlOVnFlUnUrazlrOG1SS2RrcGlmWVAyM3RNMkVaWit2d2I4eWJTbnJlZ2tTZgorbjZiVElhOEJ6azVRY2xWZGRSWDMxRVg0SjczNEl4bVlrUkdzNm11bHdzQU5HMHZQL2RvRU5vN0lVRDNRUmh3CktVWEJ0N3FCQlFJRFBlOHUvNTRWSHlEWnZUeW9xQTNLK3dDVUQ5ZWF5STN0a2JDODZ6S2F4ZzVKTTB2ZlB6U1UKL1dLaE9oWU9PTkNla3p6dEJLUEt2UEJjR0tTVTFKS3pqMFl4UXhiUVFmMENBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQk1RVWhuVE1OYXMvblJ3ClRoWkpXQzAxOWYxZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ2VEYlg2dllqSFkrRDh1RUROSmwrUmxzTmgKZ0hxK0Q2Rlp1TEhhMjhIRENRaHN6RWFhUUFQOERoMHhWcnQvODlBMmc0cVJUVkdxYTJMdzF2ck41VGVBQUVTVApNUnJFaTZ0WmNNcTJSS0h1eGlUT1BEY053L29wNGpBZHBsM1ZCZWxsNW1yRTdRY1l5M3c0SjFZcmRjS05hamFXCnVUOTdNbWlMcVpCc3lVRmJVVlRtb3ZTbTIrOGFHa0Y1YjVKME5qdnpDNWFOUHZ3RWZUdjM5VFEzZ1BCSU14eE8KSnhGNGd4YkMvdmthSHN5blNDK3lwcjUreUhXMjZaZldXMDJRMW5PakNOYnZXSldwd2hqcStwSnRWTEVXUExzMQpoZGNUSzJHZHYzMG1SVkVpWWJGY2N6bVoyRDg2VkFjaHBocElUNnQrQk5RYWRwN0Q3dnJzcWhwKzVGdzk0VkpRCk1jSUhJcXFyZXJiQTdtMTVyUkhXUUdWOHM0RjczbjdEU2pqWlpTV2R3c1JEYndHQVlza3FTNUROc3dNdldGcDAKUEpuNDZ0QmJEcTZMU2lidXc0L3cvYkJhdjNpeWRRZWxjL2lTM21IcUExb2ZtNlFsbW4yZEs1UXZMRm9yUVBNNQpybk1SSEREWk5PRTRCeitaVGUybkIrcXI2S0cwQVNSWDZEUCtFWTg4UjJWSVN4NVZ0aXlIVEVJaS9QSVdPTnp2CmtFZ3BNWUsxcGZxRjlSeWxSOXVJUGc5L0tEWVA4VWFOODBnaTZIZFhnWGhwMGU2YTBZS3ZudVpwSGdoU3UxWHAKR2dGOUhCNGE0N1RhUUV3aFpwM004WjRnTUFvVjJkU3NDWVFaVDJ1UVRCaFRoMjUwa2UxWmEwdWN0U3NNNzY1MQpyQ1hEYzdYZWlFVDJuZFRCUUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://smooth-reindeer-k8s-2difh2t4.hcp.swedencentral.azmk8s.io:443\n  name: smooth-reindeer-aks\ncontexts:\n- context:\n    cluster: smooth-reindeer-aks\n    user: clusterUser_smooth-reindeer-rg_smooth-reindeer-aks\n  name: smooth-reindeer-aks\ncurrent-context: smooth-reindeer-aks\nkind: Config\npreferences: {}\nusers:\n- name: clusterUser_smooth-reindeer-rg_smooth-reindeer-aks\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRZXp1YUgrU0JiUmRxWWFvcUJ6RWoyREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TXpFeE1qQXhNakk1TWpCYUZ3MHlOVEV4TWpBeE1qTTVNakJhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURPVW0yQVZYYnRHQnJtQWRGZ1ZyVXAKQW9VMmhaNmZDU1N1Q3VoT1pGcmhEcmdyZy9OUys1RzRRWS90MFZsSzZENU5JaFh3WGtwM01OSmhiVzBuRHFtMQpUYXNRRGhTeTV6elZoVWIxdWlpQ2FNMXR4VGk5bU4xaXBaT1RObDdJbS9wTW1nWHBvbEF4VFBqZDJVUk8rcklpCkFlVzFTMGQrQ0wyYy93VjR1TDI2UG1walVLUkRsSEo1L0IxS0VIN2tBWkx3aHZYYmY2Tm9WN1BlTzE1L2J0aFcKaTdEbFF2N3FOZ3d2NWJrQW9BWDQ0Z0Z5dmR2ejJnb3NabTlERGk0SHhGZDdpSzVobkhhbWxaUDdtUVk2VVpocgo2YmNXM01JNUc5dDRIV054dyswdDVCNGxaSXBySHR4RTg3ZzViU3NJd2hTUDExRTQxU3NtQWtaVTVwZU1sUlN4CjdEWTE5dmtDTURiNEVUQWNlak83TXRJOVlEdUs0c1lJWHlEMzhFNU9ubHlQYU9aOHFKZ1VjVGVMQ1JjampGUGQKNXZlNmdkV1l6Y3c5S3RFUlk1cnpIWlBucHIxcVE5bVNWRFpzQ2ljUm9Ud2RqWHVIZFQxVFlXUWx0Y2NpaFl5OAphSXVYUWtTYjZuYU9mcXFIZTlkbmVhZjhIN2VWWDdudHEyTXphZW52U3ZIbDhCMXl2UFdHT1lkcmRTT2kzbkc0CmF2MUVTZDhuVng2SnR0cW5ZUTJLcWk3MlBEWDBwYkw1LzJHV1VzRU1CSTRuc1lpOE43MVJtZUorNGNuWEN2QWsKTUhKTDBPdnR1SHhGaGZtUCtRZ0hrQ2tJZzN3QXRpbjZFbmhYWnZud2tKeGRCcWViWEI4dUdkMUREdkZiK0w0SgpBNy83aG10d2RFT2U5RSt4M05ja3dRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFURUZJWjB6RFcKclA1MGNFNFdTVmd0TmZYOVlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFaRkx1MUlrZC9ndDFUSGx4d05BMwp5S2Z6c1lzNUhvRWYxenRQb25tSGFUL0FlL085SzI5RUtUZ3N1VzN2bmRNcis5a0kyVWd6Vk05YW9GUFQzdEhYCkRoeGl2NkVKMU9iU05YMWZkUVczYnJ0NDdwY2hZVktMcEdlQXBmTFhyRTF3d0Fteld2a2hvWk9qL3VxakcyREMKM21DYTRnN0tjeFhrc0F5eDk5U2pMejg0Uk41cTFwbWtrSk1LRTNKMHpuVTNsbWpxNTl2Zk9tb2xySG5IL1RVdwpOYUQzT1VLZjhhN1drekpvQk1LWlBWUC9xdTM2bWxNeHlSZVIrbTFSOTN5UlRPdXUydDY1VmZ5VytBUlo0dEVQCmhma3V3aCtHYm9JbGJxQXVVN25jdUJJZHRFTEE3NGhLMW9UQjFxZkRLUG13N0FJN3ZjT0F1R2hRdVJISjE5djMKdlRMTG5XMUtPN3ZMTG1DUVZmdmdjbmNzQWRqRGdNUTFqZytOUDNKSmNvV3M4WVJTVFhOY0tha3JPY29senJMeAppcUJ1dWZ2ckFnVk9GUTF4a0FBVkQ3dmkxWjNlRzl5KzVPUEFQSXhNU3FjK25DY05rUC9wTTA0czBpdDJkYXJ1CitORFN3TXVCMVhPaExuWjVSYmdFcktPeHovZGNRVVhkdGpBcGxHMnErOVhwdXZxQkpaTUpsRUpZeW1VMExGZDcKWnM2U2x0c0lhRkZDK0pScHM0c0RxdEhXemowRXY5UmFtS3NseEliUWtTYWdqWlFxSzJLaEt4Y1hIbHRxSzdhWQp0RjJsVlNObENnU0ZVZHlHamtMYndybytuWFIrbHZKYTBQMU13T0x1RVNHK29FckFTTk1ZaWd6ejNVcyt0NnNCCk0wVlF1eC9ZWFVvNmtUQ0FxZ3NlUXVnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBemxKdGdGVjI3UmdhNWdIUllGYTFLUUtGTm9XZW53a2tyZ3JvVG1SYTRRNjRLNFB6ClV2dVJ1RUdQN2RGWlN1ZytUU0lWOEY1S2R6RFNZVzF0Snc2cHRVMnJFQTRVc3VjODFZVkc5Ym9vZ21qTmJjVTQKdlpqZFlxV1RrelpleUp2NlRKb0Y2YUpRTVV6NDNkbEVUdnF5SWdIbHRVdEhmZ2k5blA4RmVMaTl1ajVxWTFDawpRNVJ5ZWZ3ZFNoQis1QUdTOEliMTIzK2phRmV6M2p0ZWYyN1lWb3V3NVVMKzZqWU1MK1c1QUtBRitPSUJjcjNiCjg5b0tMR1p2UXc0dUI4UlhlNGl1WVp4MnBwV1QrNWtHT2xHWWErbTNGdHpDT1J2YmVCMWpjY1B0TGVRZUpXU0sKYXg3Y1JQTzRPVzByQ01JVWo5ZFJPTlVySmdKR1ZPYVhqSlVVc2V3Mk5mYjVBakEyK0JFd0hIb3p1ekxTUFdBNwppdUxHQ0Y4ZzkvQk9UcDVjajJqbWZLaVlGSEUzaXdrWEk0eFQzZWIzdW9IVm1NM01QU3JSRVdPYTh4MlQ1NmE5CmFrUFprbFEyYkFvbkVhRThIWTE3aDNVOVUyRmtKYlhISW9XTXZHaUxsMEpFbStwMmpuNnFoM3ZYWjNtbi9CKzMKbFYrNTdhdGpNMm5wNzByeDVmQWRjcnoxaGptSGEzVWpvdDV4dUdyOVJFbmZKMWNlaWJiYXAyRU5pcW91OWp3MQo5S1d5K2Y5aGxsTEJEQVNPSjdHSXZEZTlVWm5pZnVISjF3cndKREJ5UzlEcjdiaDhSWVg1ai9rSUI1QXBDSU44CkFMWXAraEo0VjJiNThKQ2NYUWFubTF3ZkxobmRRdzd4Vy9pK0NRTy8rNFpyY0hSRG52UlBzZHpYSk1FQ0F3RUEKQVFLQ0FnQlVhWHJ0ZjRucGxPd2tZR2dHVDFOTkZQL2xmNk9YRTRtVFAxa3VBWGNCRHlHZ2hCckFQN2F0dVAwbQo0bmp5NGJQam9PZHk4VkRzRk9odC9mUWpmNmRGU3lLS3JnZ2Y3ZVdBd2tkMjc1UDFUdVdGWEtSTFJjaUZ2SkoxCkwxQjJLUUt0NW5JMjFUYVVCUmJveFNSaVg4VVRqczBwY0VRdXQyckVXYjRtVndjZ3RMcVlLWDBiUFJmYytwNE4KR0ZTaCtsYmcyNGFwS0Q1MXlUUUkzeWRaWWNOWEhVM2hicGlXd0VnYUxKV1ZRT05Rb1Q3UWNBY1diSVd2QnJYTQpySGQrckFEU3hPZjdmYVU1b0licjcvNlJTNkxkdThBeHRWNHRPVTJBaGgyU2hRTjd2Qkh0WUlZVkw0b1ZGOVd1CmdSQ1RRN3hmNFVzVXdub2wwZFp1ayswN0VoOWxzeC9PdmsrMGYvOEl2dnZScVlkQ2s3L0ErRkhOOWtZNGNUTncKQ1YwWW1tMzZTY2pYOUJkS1k5WFE3YlpWdi9tODBjMHB1ckFFcUZJMENLVVpRMk9KdVd2ZkowbUdhbFFQYno1MQpZQk1sWDRJeWppZTFrQ3ZLTWdsZmpWeStKNVRCejFEbEphOTA2SlZ5TjFxYU92ZzMvTm1aNGZxeUpaL3grNnh0CkMybzBES0M0TGZFUU1tRzlqaWw4c3A3S0lmZDRNa1Vnajg0SnJDT3E4b1RBL3p6UXovYWpsNnBRTGZUVHppV3oKTVNOUnpkWXVGdTdTT2xKcnpRZytYNUVTUnlpc25OTjRtallUbXY1QUdLcHQrUWp5a3VyTDVPd0wyNlZrSnpEeApjZFRrb3hhUGNoK0gyWU5KU1ZIZFJmTjJEdUNkS2p4VkhVMFdhVktsRXZBcWoxdzV0UUtDQVFFQTBsRloreGRUCnltUTNDcm5HNXNYRm5VeWJab0N6ck54UWhyVXZxZm1idGxtb3VoM0lKVmRBL1hzelhRQUFnck1MR2lzNnhSVGoKTVlFL0w2OEJWYkN0Qm16YTF2YzZ4OHRrbEdlWWRhUEtpYzVabXhCSzhsMnlmdU5URmd0Q0ZZbmdXV3Z4WHFWZwppczBuQ2Zid3I4SkhhVDUwSUY1WDZFL3dBVkRWNEpLNjA1SkRCeW9EWTNXRE55YmhSYzhuZkd3Z1pCNXhkem9MCmNIK0RRWDFYejhCZmtWWEF5cmpEUGV1TTI0SmNvY0tpMTNhdXBmZ2gveGdJN3dKQWllVUZudXRWcEVaNVZ2bysKYUNFZWtEUmFiMUNnME9NUCtkaXZtbjMvU1VIZHBoTmJ2cS93MXc3OGtwNkIzUWRtVkUyalRJNHU5eUo2cFRRSQpvQmxQR0xmbmI1MmhOd0tDQVFFQSt5TGtNWmVWaFFBcU5naFc5UHpiZXhkUUUwOWV2MmdFUURsSVl1eTNWMFlLCjVpc2RaTkFvM1NFNWlQRndRWFU5bGJnR0dpdEI1bHJsSVVpMldaVHlIQzJ1SGU4WEhHY2xSS0F1TmVHcFBCT2IKVS91OStsbFVEQnN6c205UnJicE51UDlhZzhseUhvaTc3MXlDWVFMb3FKL0dGSHRCekVxWHNLTDNjZ2hXVjhOLwpJMmlhRkpoMnVpc0x2ckUxNzVqNmpSUDZCcVVpRVNJcEtZZmNEUmoyS0Y1YXVVd29jQWN3QWMwaElIN1RvOWhRCjdOQVhyT3QxSlR6WGh1YnBGQ2NRMmRTampZbnhPR2w3ZDNxbnd0Y3JnOTFVdEJGdWRkc3FjNTRaYVNlc0pSNlgKRmhxeWR0M2x4bmptcTMxeDV3cWdEdnpqNXNmZmlHS29lNCtRdzMxRnh3S0NBUUVBdGFKcVdtNVgvK2V5bllHNQo1RjJTLy9sRUVDOUFmUjQ4TVVwVElyR2VKOHFnN0RPQ1FiVnNQRDNsS3dFd2I2L2UrN2V2NXJyV1IwKysyUmlECng1UndxYWJqREZteG14RHVDVGk2czRaRUNlVjYvMjcvdXZidWk2VVpnV1V4cWxaTHVnNStBdVpDVFQxRjVOWXUKSVN4ZzdlUnc5KzlpYmhCelR6K1hwbjR4K1R4TXhPZ2t5d1dXejgrMUo4dnk1d0tlcXJpYjk0TGFsRXFiZWJpZApXSjlrS2Fqc2VtYzh2c0lxQVAxQnNMWGVXc1IxcW9KMElkR0pEWmxkVVhuSDgrcDhLUVp3RG96SnpyWWpwaGlBCnJiZnRXdGx1VjdFcVh2dEh1T1c0WFpCRVlKZWtJS2NodkNKR056UUh6UERNQWZhZFd2T2RCZ1c5R1Q4aVQwK3MKQVhvWjJ3S0NBUUE4UitURWJxRktPbjduVjFzZ0ZTM052d3ZPaHNlMFpCQlpKaWJVOEFNV0pNN3E3c0J3ZVhMRgptWHNJL3dNMkF5RlVOY2JwTXlidlZ6UVdxREIxRWthSE13UFBWWnVUaXNLc1ZWS2lSbGRyL3p6U2pPUE9HdkVNCnN0N1czdGVaUHRYM0tQd2VGQldiZExDL3hOSGEzV3JoUnZDeDYrQWdYR3RLeitOYmNOcmcyQ0ZGYTQ5SWtFdzMKWmF1OUN5WnFLNnRBZitJTkJFaElHbzRNMVBxaC9qTGYvNzRCS21HdWVsc3dvMzluSUdwR3N0N0I2VFUxb1pNTgo3Q3ZEeXR0NXBlTHFscHJubDR2YVFaK01UMW5EY0FpVzcyS3NrbDZVVlpZOENHQUxHS1craHpnMjZ4T1phcXdECjF2TnZpSDMxdWx3dkhNN0xqNEI5YVVrTjE2a2s4NFh6QW9JQkFRQzBhYzNsVnd0ZUxiYmdZSUl4YjZaMkJEdFAKUlorblcvUmhMSHROcWhvdEltNkh1a2NMWVZkdUZrT2VLV1BnRC96ZUZ2R0ZnUk50RmNRRmxzUDdsK0JYZmFhNApCaXBwcEFnL0E5YnVkaVNLNU5NMnhSaEtjdERLNnhWOFI3L3BzUWN1a25aV2l2M2drdlp0RmpERm9MVHZTSW5XCjBzdXhVTTN1ekE4cDlOY2syckVWZEFCNFZTUE9qVXMwTVVLcGt5K09rcUhzdDZIVzM0d2ZXSzd0OE03aUtBZ0IKQWh5UzJldFV0NXZUaFkrSit6QlZtTkdEOEMwNk1zVUpVWWpMSjNyajlwb1BBaFRJYWZxS1AwRGpCeEliR3QzYwpxRmQxekFURC9LQWIrUHppREkvc2VROHlqNzRKT3JuK2NPN0lZeXM2SEU4aEhTaDdva2JEMVJJc0lCTHUKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    token: qjm0veuvxp9gf88wzvgyfrx052kdp5xmn7xk70zyt5x4cmfmffbzath1qvn9zwcoacfijbe9nekfafx5vvsac3flm7eyddrnvfcc2n8tuz4917t94nzv9h01qzte9fk5\n",
            "kubelet_identity": [],
            "kubernetes_version": "1.28.3",
            "linux_profile": [
              {
                "admin_username": "",
                "ssh_key": []
              }
            ],
            "location": "swedencentral",
            "name": "smooth-reindeer-aks",
            "network_profile": [
              {
                "dns_service_ip": "10.0.0.10",
                "docker_bridge_cidr": "",
                "load_balancer_sku": "Standard",
                "network_plugin": "kubenet",
                "network_policy": "",
                "pod_cidr": "10.244.0.0/16",
                "service_cidr": "10.0.0.0/16"
              }
            ],
            "node_resource_group": "MC_smooth-reindeer-rg_smooth-reindeer-aks_swedencentral",
            "oms_agent": [],
            "open_service_mesh_enabled": false,
            "private_cluster_enabled": false,
            "private_fqdn": "",
            "resource_group_name": "smooth-reindeer-rg",
            "role_based_access_control_enabled": true,
            "service_principal": [
              {
                "client_id": "0a6d589a-9d14-4e9e-b89c-42c26f212973"
              }
            ],
            "tags": {
              "environment": "Demo"
            },
            "timeouts": null,
            "windows_profile": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "aks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../learn-terraform-provision-aks-cluster/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "kubernetes_cluster_name": "smooth-reindeer-aks",
                "resource_group_name": "smooth-reindeer-rg"
              },
              "type": [
                "object",
                {
                  "kubernetes_cluster_name": "string",
                  "resource_group_name": "string"
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "C:/Users/robin/Desktop/Projects/Examensarbete/Infrastructure/Terraform/learn-terraform-deploy-nginx-kubernetes/ingress-0.1.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "api-release",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "ingress",
                "name": "api-release",
                "namespace": "default",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"nginx\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":80,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"tolerations\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "api-release",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for api.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"\"\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "fitnessapp",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./fitnessapp-0.1.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "fitnessapp-release",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "fitnessapp",
                "name": "fitnessapp-release",
                "namespace": "default",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"nginx\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":80,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"tolerations\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "fitnessapp-release",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for fitnessApp.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"\"\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./ingress-0.1.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-release",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "ingress",
                "name": "ingress-release",
                "namespace": "default",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"nginx\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":80,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"tolerations\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "ingress-release",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for ingress.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"\"\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "fitnessappnamespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "fitnessappnamespace",
            "metadata": [
              {
                "annotations": {
                  "name": "fitnessappnamespace"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "mylabel": "namespace"
                },
                "name": "fitnessappnamespace",
                "resource_version": "10077",
                "uid": "74ecbc2e-c081-481f-8c01-2c1926ef5ea5"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.azurerm_kubernetes_cluster.cluster",
            "data.terraform_remote_state.aks"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
